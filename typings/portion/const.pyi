"""
This type stub file was generated by pyright.
"""

import enum

class Bound(enum.Enum):
    """
    Bound types, either CLOSED for inclusive, or OPEN for exclusive.
    """

    CLOSED = ...
    OPEN = ...
    def __bool__(self): ...
    def __invert__(self):  # -> Literal[Bound.CLOSED, Bound.OPEN]:
        ...
    def __str__(self) -> str: ...
    def __repr__(self):  # -> Literal['CLOSED', 'OPEN']:
        ...

class _Singleton:
    __instance = ...
    def __new__(cls, *args, **kwargs):  # -> Self:
        ...

class _PInf(_Singleton):
    """
    Represent positive infinity.
    """
    def __neg__(self):  # -> _NInf:
        ...
    def __lt__(self, o) -> bool: ...
    def __le__(self, o) -> bool: ...
    def __gt__(self, o) -> bool: ...
    def __ge__(self, o) -> bool: ...
    def __eq__(self, o) -> bool: ...
    def __repr__(self):  # -> Literal['+inf']:
        ...
    def __hash__(self) -> int: ...

class _NInf(_Singleton):
    """
    Represent negative infinity.
    """
    def __neg__(self):  # -> _PInf:
        ...
    def __lt__(self, o) -> bool: ...
    def __le__(self, o) -> bool: ...
    def __gt__(self, o) -> bool: ...
    def __ge__(self, o) -> bool: ...
    def __eq__(self, o) -> bool: ...
    def __repr__(self):  # -> Literal['-inf']:
        ...
    def __hash__(self) -> int: ...

inf = ...
